variables:
    LATEST_NODE_VERSION: v12.16.1
    NVM_DIR: /usr/local/nvm

stages:
    - test


unit_tests_linux:
    allow_failure: false
    image: nexus.synerty.com:5000/peek-linux-test
    only:
        - pushes
        - web
        - triggers
        - merge_requests
    script:
        - export PIP_INDEX=http://${NEXUS_USER}:${NEXUS_PASSWORD}@${NEXUS_URL}/repository/pypi-all/pypi
        - export PIP_INDEX_URL=http://${NEXUS_USER}:${NEXUS_PASSWORD}@${NEXUS_URL}/repository/pypi-all/simple
        - export PIP_TRUSTED_HOST=${NEXUS_URL}
        - pip install -e .
        - trial --reporter=subunit `find peek_* -name "*Test.py"` | subunit-1to2 | subunit2junitxml -o report.xml 1> /dev/null
        - echo "Tests have succeeded, this package will be uploaded to nexus as 0.0.0"
        - echo "This will only happen in the peek group project and master branch"
        - rm -rf dist
        - sed -i "s/0.0.0/0.0.0+b${CI_PIPELINE_ID}/g" setup.py
        - export TWINE_REPOSITORY_URL=http://${NEXUS_URL}/repository/pypi-internal/
        - export TWINE_USERNAME=${NEXUS_USER}
        - export TWINE_PASSWORD=${NEXUS_PASSWORD}
        - if [ ${CI_PROJECT_NAMESPACE} == 'peek' -a ${CI_COMMIT_REF_NAME} == 'master' ];
            then python setup.py sdist && twine upload dist/*.gz; fi
    stage: test
    artifacts:
        reports:
            junit: report.xml
    tags:
        - linux


sonar:
    allow_failure: false
    image: nexus.synerty.com:5000/peek-linux-sonar
    only:
        - pushes
        - web
        - triggers
        - merge_requests
    stage: test
    script:
        - echo "Run sonar-scanner"
        - source $NVM_DIR/nvm.sh
        - nvm use $LATEST_NODE_VERSION
        - export NODE_PATH=`npm root -g`
        - npm install -g typescript@3.7.5
        - sonar-scanner
    tags:
        - linux
